on:
  workflow_dispatch:

name: Build binaries and publish package
jobs:
  check:
    name: Check if package already exists
    runs-on: ubuntu-latest
    outputs:
      version: v${{ steps.get_version.outputs.version }}
      package_exists: ${{ steps.package_exists.outputs.exists }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get version
        id: get_version
        run: echo "version=$(npm pkg get version | sed 's/"//g')" >> $GITHUB_OUTPUT

      - name: Get package name
        id: get_name
        run: echo "name=$(npm pkg get name | sed 's/"//g')" >> $GITHUB_OUTPUT

      - name: Check package
        id: package_exists
        run: |
          if [ $(npm view ${{ steps.get_name.outputs.name }}@${{ steps.get_version.outputs.version }} version 2> /dev/null) ]; then
            echo "exists=yes" >> $GITHUB_OUTPUT
          else
            echo "exists=no" >> $GITHUB_OUTPUT
          fi          

      - name: Log outputs
        run: |
          echo "Release version: ${{ steps.get_version.outputs.version }}"
          echo "Package exists:  ${{ steps.package_exists.outputs.exists }}"

  build:
    needs: [check]
    name: Build
    strategy:
      matrix:
#        os: [macos-latest, ubuntu-latest, self-hosted]
        os: [self-hosted]
    runs-on: ${{ matrix.os }}
#    if: needs.check.outputs.package_exists == 'no'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

#      - name: Install build environment
#        run: sudo apt-get install python3 make g++
#        if: matrix.os == 'self-hosted'

      - name: Install Node dependencies
        run: npm install --ignore-scripts

      - name: Build package for ${{ matrix.os }}
        run: npm run prebuild
        env:
          MAKEFLAGS: -j4

      - name: Upload prebuild as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: prebuilds/${{ matrix.os }}/**
          retention-days: 1

      - run: find .

  release:
    name: Publish package
    runs-on: ubuntu-latest
    needs: [check, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: prebuilds

      - run: find .
#      - name: Publish to npm
#        uses: JS-DevTools/npm-publish@v2
#        with:
#          access: public
#          token: ${{ secrets.NPM_TOKEN }}
#          dry-run: false
